{"version":3,"sources":["../../../src/basic/DatePicker.js"],"names":["DatePicker","props","showDatePicker","Platform","OS","setState","iosVisible","androidVisible","state","defaultDate","Date","chosenDate","placeHolderText","undefined","date","onDateChange","formatChosenDate","getDate","getMonth","getFullYear","join","animationType","disabled","locale","maximumDate","minimumDate","modalTransparent","placeHolderTextStyle","textStyle","timeZoneOffsetInMinutes","variables","context","theme","variable","padding","datePickerPadding","color","datePickerTextColor","event","setDate","backgroundColor","datePickerBg","flex","datePickerFlex","flexDirection","justifyContent","paddingTop","paddingBottom","fontWeight","React","Component","defaultProps"],"mappings":"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","file":"DatePicker.js","sourcesContent":["import React from 'react';\nimport { Modal, View, Platform } from 'react-native';\n\nimport DateTimePicker from '@react-native-community/datetimepicker';\n\nimport variable from '../theme/variables/platform';\n\nimport { Text } from './Text';\nimport { Button } from './Button';\n\nexport class DatePicker extends React.Component {\n  static defaultProps = {\n    disabled: false\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      iosVisible: false,\n      androidVisible: false,\n      defaultDate: props.defaultDate ? props.defaultDate : new Date(),\n      chosenDate:\n        !props.placeHolderText && props.defaultDate\n          ? props.defaultDate\n          : undefined\n    };\n  }\n\n  setDate(date) {\n    this.setState({ chosenDate: new Date(date), androidVisible: false });\n    if (this.props.onDateChange) {\n      this.props.onDateChange(date);\n    }\n  }\n\n  showDatePicker = () => {\n    if (Platform.OS === 'ios') {\n      this.setState({ iosVisible: true });\n    } else {\n      this.setState({ androidVisible: true });\n    }\n  };\n\n  formatChosenDate(date) {\n    if (this.props.formatChosenDate) {\n      return this.props.formatChosenDate(date);\n    }\n    return [date.getDate(), date.getMonth() + 1, date.getFullYear()].join('/');\n  }\n\n  render() {\n    const {\n      animationType,\n      disabled,\n      locale,\n      maximumDate,\n      minimumDate,\n      modalTransparent,\n      placeHolderText,\n      placeHolderTextStyle,\n      textStyle,\n      timeZoneOffsetInMinutes\n    } = this.props;\n\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n\n    return (\n      <View>\n        <View>\n          <Text\n            onPress={() => (!disabled ? this.showDatePicker() : undefined)}\n            style={[\n              {\n                padding: variables.datePickerPadding,\n                color: variables.datePickerTextColor\n              },\n              this.state.chosenDate ? textStyle : placeHolderTextStyle\n            ]}\n          >\n            {this.state.chosenDate\n              ? this.formatChosenDate(this.state.chosenDate)\n              : placeHolderText || 'Select Date'}\n          </Text>\n          {this.state.androidVisible && (\n            <DateTimePicker\n              value={\n                this.state.chosenDate\n                  ? this.state.chosenDate\n                  : this.state.defaultDate\n              }\n              onChange={(event, date) => this.setDate(date)}\n              minimumDate={minimumDate}\n              maximumDate={maximumDate}\n              mode=\"date\"\n              display=\"default\"\n              locale={locale}\n              timeZoneOffsetInMinutes={timeZoneOffsetInMinutes}\n            />\n          )}\n          <View>\n            <Modal\n              supportedOrientations={['portrait', 'landscape']}\n              animationType={animationType}\n              transparent={modalTransparent} // from api\n              visible={this.state.iosVisible}\n              onRequestClose={() => {}}\n            >\n              <Text\n                onPress={() => this.setState({ iosVisible: false })}\n                style={{\n                  backgroundColor: variables.datePickerBg,\n                  flex: variables.datePickerFlex\n                }}\n              />\n              <View\n                style={{ flexDirection: 'row', justifyContent: 'flex-end' }}\n              >\n                <Button\n                  transparent\n                  style={{ paddingTop: 0, paddingBottom: 0 }}\n                  onPress={() => this.setState({ iosVisible: false })}\n                >\n                  <Text style={{ fontWeight: 'bold' }}>Done</Text>\n                </Button>\n              </View>\n              <DateTimePicker\n                value={\n                  this.state.chosenDate\n                    ? this.state.chosenDate\n                    : this.state.defaultDate\n                }\n                onChange={(event, date) => this.setDate(date)}\n                minimumDate={minimumDate}\n                maximumDate={maximumDate}\n                mode=\"date\"\n                display=\"spinner\"\n                locale={locale}\n                timeZoneOffsetInMinutes={timeZoneOffsetInMinutes}\n              />\n            </Modal>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n"]}